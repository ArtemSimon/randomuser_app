version: '3.8'
services:

  # сервис приложения
  fast_api_app: 
    # build: .
    image: fast_api_app:1
    container_name: fast_api_app
    env_file: "randomuser.env"
    depends_on:
      pg_randomuser:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: >
      sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]  # Проверка готовности
      interval: 5s
      timeout: 3s
      retries: 10
      # start_period: 60s
    networks:
      randomuser_network:
        aliases: [fast_api_app]


  # База данных
  pg_randomuser:
    image: postgres:latest
    container_name: pg_randomuser
    env_file: "postgres.env"
    ports:
      - "5432:5432"
    volumes:
      - "pg_randomuser_data:/var/lib/postgresql/data"
    healthcheck:
      test: [ "CMD-SHELL", "psql -U $${POSTGRES_USER} -d $${POSTGRES_DB} -c 'SELECT 1' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      randomuser_network:
        aliases: [pg_randomuser]
    
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf 
      - ./app/static:/usr/share/nginx/static
    restart: unless-stopped
    healthcheck:  # для автоматического перезапуска конфига 
      test: ["CMD", "nginx", "-t"]
      interval: 5s
      timeout: 3s
      retries: 3
    depends_on:
      fast_api_app:
        condition: service_healthy 
    networks:
      randomuser_network:
        aliases: [nginx]

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

volumes:
  redis_data:
  pg_randomuser_data:
    driver: local

networks:
  randomuser_network:
    name: randomuser_network